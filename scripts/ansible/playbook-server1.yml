---
- name: Create everything for microservices
  hosts: testserver
  become: yes
  become_user: root
  gather_facts: no
  tasks:
    - name: Copy variables.env to server
      copy:
        src: variables.env
        dest: ~/variables.env

    - name: Create Docker network
      docker_network:
        name: front-network

    - name: Check if there are running containers and stop them
      shell: docker ps -q
      register: running_containers
      ignore_errors: yes
      changed_when: false

    - name: Stop running containers
      docker_container:
        name: "{{ item }}"
        state: stopped
      loop: "{{ running_containers.stdout_lines }}"
      when: running_containers.stdout_lines | length > 0
    - name: Run frontend container
      docker_container:
        name: frontend
        image: public.ecr.aws/j1n2c2p2/microservices-demo/frontend:latest
        env_file: ~/variables.env
        env:
          PORT: "80"
        network_mode: front-network
        ports:
          - "8080:80"
        auto_remove: true

    - name: Run recommendationservice container
      docker_container:
        name: recommendationservice
        image: public.ecr.aws/j1n2c2p2/microservices-demo/recommendationservice:latest
        env_file: ~/variables.env
        env:
          PORT: "8081"
        network_mode: front-network
        ports:
          - "8081:8081"
        auto_remove: true

    - name: Run productcatalogservice container
      docker_container:
        name: productcatalogservice
        image: public.ecr.aws/j1n2c2p2/microservices-demo/productcatalogservice:latest
        env_file: ~/variables.env
        env:
          PORT: "3550"
        network_mode: front-network
        ports:
          - "3550:3550"
        auto_remove: true
